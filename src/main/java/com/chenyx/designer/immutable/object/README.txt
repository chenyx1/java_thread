-- immutable object 不可变对象设计模式
immutable object 设计模式可以在不实用锁的情况，保证共享数据的的线程安全，同时避免了引用锁带来的问题和开销。
immutable object 设计模式实现逻辑：主要将状态可变的实体建模为状态不可变的对象，并通过创建不同的对象来反映可变实体的变换。

immutable onject 设计模式的类图如下所示：



immutable object设计模式的简单案例：
  需求背景：彩信的增值服务商，通过彩信的网关系统，给某一个指定客户下发一条彩信信息；彩信网关系统接收到了客户信息和彩信新消息。
    根据客户号码的前缀识别对应的客户所在的彩信中心。将客户的电话号码和彩信信息发送给对应的彩信中心。彩信中心接收到相关信息发送彩信。


  需求分析：
    在上述需求中，共有三个不同的系统（角色）参与整个任务下发的动作。分别如下：
     彩信增值服务商系统：下发彩信到指定客户的命令。
     彩信网关系统：接收搭到彩信服务商系统的命令，并将其转发到客户所在的彩信中心系统。
     彩信中心系统：下发彩信。


  详细分析：
     在上诉需求分析过程中，彩信网关系统路由到对应的彩信中心，这个过程，需要维护路由表，通过对应的路由表路由到对应的到对应的彩信中心。
     由于路由表的信息不是频繁变更的。所以在多并发显示访问时，可以通过imutable object设计模式解决并发问题。

     设计过程如下：
      MMSCInfo：彩信中心的路由信息
      MMSCRouter：路由管理器
